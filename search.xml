<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>C++ Talk</title>
    <url>/2021/02/01/c-talk/</url>
    <content><![CDATA[<h1 id="C-小讲堂-8-21"><a href="#C-小讲堂-8-21" class="headerlink" title="C++小讲堂_8_21"></a>C++小讲堂_8_21</h1><ul>
<li><h3 id="优先使用delete关键字删除函数而非private却又不实现的函数"><a href="#优先使用delete关键字删除函数而非private却又不实现的函数" class="headerlink" title="优先使用delete关键字删除函数而非private却又不实现的函数"></a>优先使用delete关键字删除函数而非private却又不实现的函数</h3></li>
<li><h3 id="使用override关键字声明覆盖的函数"><a href="#使用override关键字声明覆盖的函数" class="headerlink" title="使用override关键字声明覆盖的函数"></a>使用override关键字声明覆盖的函数</h3></li>
</ul>
<h2 id="优先使用delete关键字删除函数而非private却又不实现的函数-1"><a href="#优先使用delete关键字删除函数而非private却又不实现的函数-1" class="headerlink" title="优先使用delete关键字删除函数而非private却又不实现的函数"></a>优先使用delete关键字删除函数而非private却又不实现的函数</h2><h3 id="Why-delete？"><a href="#Why-delete？" class="headerlink" title="Why delete？"></a>Why delete？</h3><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">class camera_settings
{
public:
    ...
    void setoptions();
    ...
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">class camera_settings
{
public:
    ...
    //void setoptions();
    ...
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">//c++98
class camera_settings
{
public:
    ...
private:
    ...
    camera_settings(const camera_settings&amp;);
    camera_settings&amp; operator=(const camera_settings&amp;);
    ...
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">//c++11
class camera_setting
{
public:
	...
    camera_settings(const camera_settings&amp;)=delete;
    camera_settings&amp; operator=(const camera_settings&amp;)=delete;
    ...
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="delete的优点"><a href="#delete的优点" class="headerlink" title="delete的优点"></a>delete的优点</h3><h4 id="防止普通非成员函数中的隐式转化"><a href="#防止普通非成员函数中的隐式转化" class="headerlink" title="防止普通非成员函数中的隐式转化"></a>防止普通非成员函数中的隐式转化</h4><p>​    C++继承于C意味着,某些类型可能会被隐式的转换为另一些类型, 并且有些类型转化可以编译通过却没有任何意义.</p>
<p>​    如果函数参数必须是某种数据类型,我们希望能到阻止上面那种形式的调用。</p>
<p>​    完成这个任务的一个方法是为想被排除出去的类型的重载函数声明为删除的:</p>
<pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">bool isLucky(int number);

bool isLucky(char)=delete;
bool isLucky(bool)=delete;
bool isLucky(double)=delete;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="阻止应该被禁用的模板实现"><a href="#阻止应该被禁用的模板实现" class="headerlink" title="阻止应该被禁用的模板实现"></a>阻止应该被禁用的模板实现</h4><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">class MyClass
{
public:
	template&lt;typename T&gt;
	void function(T t);
private:
	template&lt;&gt;				//错误！！！
	void function(char);	
};<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>如果类内部有一个函数模板，想通过声明它们为私有来禁止某些实现，是做不到的，因为赋予一个成员函数模板的某种特殊情况下的拥有不同于模板主体的访问权限是不可能的。</p>
<p>并且模板的特殊情况必须要写在命名空间的作用域内，而不是类的作用域内。<br>不过，这些问题对于delete是不存在的，它们也可以在类外被声明为是delete的（也就是在命名空间的作用域内）</p>
<h3 id="delete的注意事项"><a href="#delete的注意事项" class="headerlink" title="delete的注意事项"></a>delete的注意事项</h3><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">class  MyClass
{
public:
    void funA()=delete ;
private:
    void funB()=delete ;
};

int main()
{
    MyClass A;
    
    A.funA();
    A.funB();
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="小结："><a href="#小结：" class="headerlink" title="小结："></a>小结：</h3><ol>
<li>优先使用删除函数而不是私有而不定义的函数</li>
<li>任何函数都可以被声明为删除，包括非成员函数和模板实现</li>
<li>删除函数最好声明为公有而非私有的</li>
</ol>
<h2 id="使用override关键字声明覆盖的函数-1"><a href="#使用override关键字声明覆盖的函数-1" class="headerlink" title="使用override关键字声明覆盖的函数"></a>使用override关键字声明覆盖的函数</h2><h3 id="什么是函数的覆盖（改写）"><a href="#什么是函数的覆盖（改写）" class="headerlink" title="什么是函数的覆盖（改写）"></a>什么是函数的覆盖（改写）</h3><h4 id="覆盖是指派生类函数覆盖基类函数，特征是："><a href="#覆盖是指派生类函数覆盖基类函数，特征是：" class="headerlink" title="覆盖是指派生类函数覆盖基类函数，特征是："></a>覆盖是指派生类函数覆盖基类函数，特征是：</h4><p><strong>（1）不同的范围（分别位于派生类与基类）；</strong></p>
<p><strong>（2）函数名字相同；</strong></p>
<p><strong>（3）参数相同；</strong></p>
<p><strong>（4）基类函数必须有virtual关键字。</strong></p>
<h4 id="在C-98中，如果要发生函数的覆盖，必须满足以下几个条件："><a href="#在C-98中，如果要发生函数的覆盖，必须满足以下几个条件：" class="headerlink" title="在C++98中，如果要发生函数的覆盖，必须满足以下几个条件："></a>在C++98中，如果要发生函数的覆盖，必须满足以下几个条件：</h4><ul>
<li>基类中的函数必须是虚函数</li>
<li>基类和派生类中函数的名字必须完全相同（析构函数除外）</li>
<li>基类和派生类中的函数形参类型必须完全一样</li>
<li>基类和派生类中的函数的常量特性必须完全一样</li>
<li>基类和派生类中的函数返回值和异常声明必须是兼容的</li>
</ul>
<h4 id="在C-11中，还有一条："><a href="#在C-11中，还有一条：" class="headerlink" title="在C++11中，还有一条："></a>在C++11中，还有一条：</h4><ul>
<li><p>基类和派生类的引用修饰符必须完全一样</p>
<p>（引用修饰符是为了实现限制成员函数仅用于左值或者右值）</p>
</li>
</ul>
<pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">class Widget
{
public:
    void doWork() &amp;;	//只有*this为左值时，这个版本才会被调用
    void doWork() &amp;&amp;;	//只有*this为右值时，这个函数才会被调用
};

Widget makeWidget();	//工厂函数，返回右值
Widget w;				//正常对象（左值）

w.doWork();				//调用了Widget::doWork &amp;
makeWidget().doWork();	//调用了Widget::doWork &amp;&amp;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="容易出错的虚函数覆盖"><a href="#容易出错的虚函数覆盖" class="headerlink" title="容易出错的虚函数覆盖"></a>容易出错的虚函数覆盖</h3><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">class	Base {
public:
    virtual void mf1() const;
    virtual void mf2(int x);
    virtual void mf3() &amp;;
    void mf4() const;
};

class	Derived:public	Base {
public:
    virtual void mf1();
    virtual void mf2(unsigned int x);
    virtual void mf3() &amp;&amp;;
    void mf4() const;
};<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>因为声明派生类的覆盖函数很重要，又如此容易出错，所以C++11提供了一种方法来显示的标明派生类中的函数是为了改写基类的版本，为其加上override声明即可。</p>
<pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">class	Derived:public	Base {
public:
    virtual void mf1() override;
    virtual void mf2(unsigned int x) override;
    virtual void mf3() &amp;&amp; override;
    virtual void mf4() const override;
};<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>这样，上面这些代码就无法通过编译了，并且编译器会把覆盖函数所有的问题揭露出来。</p>
<p>对于派生类中覆盖体都声明为 override 不仅仅可以让编译器在应该要去覆盖基类中函数而没有去覆盖的时候可以警告你。</p>
<p>它还可以帮助你预估一下更改基类里的虚函数的标识符可能会引起的后果。如果没有 override ,你只能指望自己有一个完备的测试单元。因为，正如我们看到的，派生类中那些原本被认为要覆盖基类函数的部分，不一定引起编译器的警告。</p>
<h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul>
<li>为想要覆盖的函数添加override</li>
<li>成员函数的引用饰词使得对于左值和右值对象（*this）的处理能够区分开来</li>
</ul>
]]></content>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/02/01/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>ROS中nodelet的使用</title>
    <url>/2021/02/01/ros-nodelet/</url>
    <content><![CDATA[<h1 id="ROS中nodelet的使用"><a href="#ROS中nodelet的使用" class="headerlink" title="ROS中nodelet的使用"></a>ROS中nodelet的使用</h1><h2 id="1-为什么使用nodelet？"><a href="#1-为什么使用nodelet？" class="headerlink" title="1. 为什么使用nodelet？"></a>1. 为什么使用nodelet？</h2><p>Nodelet提供了一种方法，可以在同一台计算机上，在同一个进程内，运行多个算法，且在进程内消息传递时不产生复制成本（zero  copy）。在一个node里面，roscpp利用指针传递可以实现在publish和subscribe调用时的零拷贝。为了实现相似的效果，多个nodelets允许将多个类动态加载到同一个node里，同时还提供独立的命名空间，从而使得这些nodelets尽管运行在同一个进程里，但却仍然像单独的node一样工作。也就实现了“在一个进程（node）里运行多个nodelet”的效果。</p>
<p>因此，大通量数据流可能包含多个nodelet，此时若将他们加载到同一个进程里，就可以避免数据拷贝和网络传输。</p>
<h2 id="2-在ROS工程中使用nodelet"><a href="#2-在ROS工程中使用nodelet" class="headerlink" title="2. 在ROS工程中使用nodelet"></a>2. 在ROS工程中使用nodelet</h2><h3 id="1-创建工作空间和程序包"><a href="#1-创建工作空间和程序包" class="headerlink" title="1.创建工作空间和程序包"></a>1.创建工作空间和程序包</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> -p ~/catkin_ar/src

<span class="token builtin class-name">cd</span> catkin_ar/

catkin_make

<span class="token builtin class-name">source</span> devel/setup.sh

<span class="token builtin class-name">cd</span> src

catkin_create_pkg try_nodelet roscpp rospy nodelet std_msgs sensor_msgs cv_bridge image_transport ddynamic_reconfigure<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="2-创建并且编写cpp文件与hpp文件"><a href="#2-创建并且编写cpp文件与hpp文件" class="headerlink" title="2.创建并且编写cpp文件与hpp文件"></a>2.创建并且编写cpp文件与hpp文件</h3><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">//try_use.hpp
#pragma once
#include &lt;nodelet/nodelet.h&gt;
#include &lt;ros/ros.h&gt;

namespace try_nodelet
{
    class try_use : public nodelet::Nodelet
    {
    public:
        virtual void onInit();
    };
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">//try_use.cpp
#include &lt;pluginlib/class_list_macros.h&gt;
#include &lt;../include/try_nodelet/try_use.hpp&gt;

PLUGINLIB_EXPORT_CLASS(try_nodelet::try_use,nodelet::Nodelet)

namespace try_nodelet
{
    void try_use::onInit()
    {
        NODELET_DEBUG("Initializing nodelet...");
        ROS_INFO("Nodelet is Ok for test!!");
    }
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="3-编写nodelet-plugins-xml"><a href="#3-编写nodelet-plugins-xml" class="headerlink" title="3.编写nodelet_plugins.xml"></a>3.编写nodelet_plugins.xml</h3><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>library</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lib/libtry_nodelet<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    
<span class="token comment">&lt;!--上面这个try_nodelet是包的名字，下面的那个是命名空间的名字--&gt;</span>
    
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>class</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>try_nodelet/try_use<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>try_nodelet::try_use<span class="token punctuation">"</span></span> <span class="token attr-name">base_class_type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nodelet::Nodelet<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>
  Trying to use nodelet in ROS.
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>class</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>library</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="4-修改CMakeLists-txt与package-xml"><a href="#4-修改CMakeLists-txt与package-xml" class="headerlink" title="4.修改CMakeLists.txt与package.xml"></a>4.修改CMakeLists.txt与package.xml</h3><p>修改CMakeLists.txt</p>
<pre class="line-numbers language-cmake" data-language="cmake"><code class="language-cmake"><span class="token keyword">cmake_minimum_required</span><span class="token punctuation">(</span><span class="token property">VERSION</span> <span class="token number">3.0.2</span><span class="token punctuation">)</span>
<span class="token keyword">project</span><span class="token punctuation">(</span>try_nodelet<span class="token punctuation">)</span>

<span class="token keyword">add_compile_options</span><span class="token punctuation">(</span>-std=c++<span class="token number">11</span><span class="token punctuation">)</span>
<span class="token comment">#上面这个最好加上，否则可能会编译失败</span>

<span class="token keyword">find_package</span><span class="token punctuation">(</span>catkin REQUIRED COMPONENTS
  cv_bridge
  ddynamic_reconfigure
  image_transport
  nodelet
  roscpp
  rospy
  sensor_msgs
  std_msgs
<span class="token punctuation">)</span>

<span class="token function">catkin_package</span><span class="token punctuation">(</span>
  INCLUDE_DIRS include
  LIBRARIES try_nodelet
  CATKIN_DEPENDS cv_bridge ddynamic_reconfigure image_transport nodelet roscpp rospy sensor_msgs std_msgs
<span class="token comment">#  DEPENDS system_lib</span>
<span class="token punctuation">)</span>

<span class="token keyword">include_directories</span><span class="token punctuation">(</span>
   include
  <span class="token punctuation">${</span>catkin_INCLUDE_DIRS<span class="token punctuation">}</span>
<span class="token punctuation">)</span>

<span class="token keyword">add_library</span><span class="token punctuation">(</span><span class="token punctuation">${</span><span class="token variable">PROJECT_NAME</span><span class="token punctuation">}</span> 
    src/try_use.cpp
<span class="token punctuation">)</span>

<span class="token keyword">add_dependencies</span><span class="token punctuation">(</span>
    <span class="token punctuation">${</span><span class="token variable">PROJECT_NAME</span><span class="token punctuation">}</span> 
    <span class="token punctuation">${</span><span class="token punctuation">${</span><span class="token variable">PROJECT_NAME</span><span class="token punctuation">}</span>_EXPORTED_TARGETS<span class="token punctuation">}</span> 
    <span class="token punctuation">${</span>catkin_EXPORTED_TARGETS<span class="token punctuation">}</span>
<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>修改package.xml</p>
<pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0"?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>package</span> <span class="token attr-name">format</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>try_nodelet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>The try_nodelet package<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maintainer</span> <span class="token attr-name">email</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>npu-lqx@todo.todo<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>npu-lqx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maintainer</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>license</span><span class="token punctuation">&gt;</span></span>TODO<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>license</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>buildtool_depend</span><span class="token punctuation">&gt;</span></span>catkin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>buildtool_depend</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build_depend</span><span class="token punctuation">&gt;</span></span>cv_bridge<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build_depend</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build_depend</span><span class="token punctuation">&gt;</span></span>ddynamic_reconfigure<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build_depend</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build_depend</span><span class="token punctuation">&gt;</span></span>image_transport<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build_depend</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build_depend</span><span class="token punctuation">&gt;</span></span>nodelet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build_depend</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build_depend</span><span class="token punctuation">&gt;</span></span>roscpp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build_depend</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build_depend</span><span class="token punctuation">&gt;</span></span>rospy<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build_depend</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build_depend</span><span class="token punctuation">&gt;</span></span>sensor_msgs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build_depend</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build_depend</span><span class="token punctuation">&gt;</span></span>std_msgs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build_depend</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build_export_depend</span><span class="token punctuation">&gt;</span></span>cv_bridge<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build_export_depend</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build_export_depend</span><span class="token punctuation">&gt;</span></span>ddynamic_reconfigure<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build_export_depend</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build_export_depend</span><span class="token punctuation">&gt;</span></span>image_transport<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build_export_depend</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build_export_depend</span><span class="token punctuation">&gt;</span></span>nodelet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build_export_depend</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build_export_depend</span><span class="token punctuation">&gt;</span></span>roscpp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build_export_depend</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build_export_depend</span><span class="token punctuation">&gt;</span></span>rospy<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build_export_depend</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build_export_depend</span><span class="token punctuation">&gt;</span></span>sensor_msgs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build_export_depend</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build_export_depend</span><span class="token punctuation">&gt;</span></span>std_msgs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build_export_depend</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exec_depend</span><span class="token punctuation">&gt;</span></span>cv_bridge<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exec_depend</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exec_depend</span><span class="token punctuation">&gt;</span></span>ddynamic_reconfigure<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exec_depend</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exec_depend</span><span class="token punctuation">&gt;</span></span>image_transport<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exec_depend</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exec_depend</span><span class="token punctuation">&gt;</span></span>nodelet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exec_depend</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exec_depend</span><span class="token punctuation">&gt;</span></span>roscpp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exec_depend</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exec_depend</span><span class="token punctuation">&gt;</span></span>rospy<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exec_depend</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exec_depend</span><span class="token punctuation">&gt;</span></span>sensor_msgs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exec_depend</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exec_depend</span><span class="token punctuation">&gt;</span></span>std_msgs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exec_depend</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>export</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nodelet</span> <span class="token attr-name">plugin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${prefix}/nodelet_plugins.xml<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>export</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>package</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="5-编译"><a href="#5-编译" class="headerlink" title="5.编译"></a>5.编译</h3><h2 id="3-启动ROS节点"><a href="#3-启动ROS节点" class="headerlink" title="3.启动ROS节点"></a>3.启动ROS节点</h2><h3 id="1-编写launch文件进行快速启动"><a href="#1-编写launch文件进行快速启动" class="headerlink" title="1.编写launch文件进行快速启动"></a>1.编写launch文件进行快速启动</h3><p>新建一个launch文件夹，并在文件夹中新建一个start.launch文件</p>
<pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>launch</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>node</span> <span class="token attr-name">pkg</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nodelet<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nodelet<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>standalone_nodelet<span class="token punctuation">"</span></span>  <span class="token attr-name">args</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>manager<span class="token punctuation">"</span></span> <span class="token attr-name">output</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>node</span> <span class="token attr-name">pkg</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nodelet<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nodelet<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>using_nodelet<span class="token punctuation">"</span></span> <span class="token attr-name">args</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>load try_nodelet/try_use standalone_nodelet<span class="token punctuation">"</span></span> <span class="token attr-name">output</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>node</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>launch</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="2-通过命令行运行"><a href="#2-通过命令行运行" class="headerlink" title="2.通过命令行运行"></a>2.通过命令行运行</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#终端1</span>
roscore
<span class="token comment">#终端2</span>
rosrun nodelet nodelet manager __name:<span class="token operator">=</span>nodelet_manager
<span class="token comment">#终端3</span>
rosrun nodelet nodelet load try_nodelet/try_use nodelet_manager __name:<span class="token operator">=</span>using_nodelet<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>注意，如果这里报错“According to the loaded plugin descriptions the class try_nodelet/try_use with base class type nodelet::Nodelet does not exist.”  一般是因为运行manager的窗口（终端2）没有source</p>
<p>所以要么一开始就把source写进配置文件中，要么就每个相关的窗口都要source，这样能够避免很多问题，也方便自己找到程序的bug所在。</p>
<h2 id="4-将已有的ROS工程改写为nodelet"><a href="#4-将已有的ROS工程改写为nodelet" class="headerlink" title="4.将已有的ROS工程改写为nodelet"></a>4.将已有的ROS工程改写为nodelet</h2>]]></content>
      <categories>
        <category>ROS的基本操作</category>
      </categories>
      <tags>
        <tag>ROS</tag>
      </tags>
  </entry>
  <entry>
    <title>test_picture</title>
    <url>/2021/02/01/test-picture/</url>
    <content><![CDATA[<h1 id="测试图片显示"><a href="#测试图片显示" class="headerlink" title="测试图片显示"></a>测试图片显示</h1><h2 id="test1"><a href="#test1" class="headerlink" title="test1"></a>test1</h2><img src="/images/test_picture/1.png" style="zoom:25%;">

<h2 id="test2"><a href="#test2" class="headerlink" title="test2"></a>test2</h2><p><img src="/images/test_picture/2.jpg"></p>
]]></content>
      <categories>
        <category>test</category>
      </categories>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
  <entry>
    <title>test_top</title>
    <url>/2020/09/07/test-top/</url>
    <content><![CDATA[<h1 id="test-top"><a href="#test-top" class="headerlink" title="test-top"></a>test-top</h1><h2 id="test-picture"><a href="#test-picture" class="headerlink" title="test-picture"></a>test-picture</h2><p><img src="/images/test_top/5.png"></p>
]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Typora</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>today-plan</title>
    <url>/2021/02/01/today-plan/</url>
    <content><![CDATA[<h1 id="02-01-Plan"><a href="#02-01-Plan" class="headerlink" title="02/01 Plan"></a>02/01 Plan</h1><blockquote>
<p><strong><font color="red">w(ﾟДﾟ)w</font></strong></p>
</blockquote>
<h2 id="Week-Focus"><a href="#Week-Focus" class="headerlink" title="Week Focus:"></a>Week Focus:</h2><ul>
<li><strong><font color="green">O(∩_∩)O哈！</font></strong></li>
<li><strong><font color="green">QAQ</font></strong></li>
<li><strong><font color="pink">JAVA</font></strong></li>
<li><strong><font color="pink">C++</font></strong></li>
<li><strong><font color="pink">Python</font></strong></li>
<li><strong><font color="orange">github</font></strong></li>
<li><strong><font color="orange">gitee</font></strong></li>
<li><strong><font color="fuchsia">╭(╯^╰)╮</font></strong></li>
</ul>
<h2 id="Timetable"><a href="#Timetable" class="headerlink" title="Timetable:"></a>Timetable:</h2><table>
<thead>
<tr>
<th><strong>时间段</strong></th>
<th><strong>计划任务</strong></th>
</tr>
</thead>
<tbody><tr>
<td><strong>07:00-07:20</strong></td>
<td><strong>起床&amp;洗漱【X】</strong></td>
</tr>
<tr>
<td><strong>07:20-08:00</strong></td>
<td><strong>早餐【V】</strong></td>
</tr>
<tr>
<td><strong>08:00-08:30</strong></td>
<td><strong><font color="green">看新闻【V】</font></strong></td>
</tr>
<tr>
<td><strong>08:30-09:00</strong></td>
<td><strong><font color="green">打游戏【V】</font></strong></td>
</tr>
</tbody></table>
<h2 id="Check-List"><a href="#Check-List" class="headerlink" title="Check List:"></a>Check List:</h2><ul>
<li><strong>素质拓展</strong><ul>
<li><input checked="" disabled="" type="checkbox"> <strong>自行车环塔五公里</strong></li>
<li><input checked="" disabled="" type="checkbox"> <strong>口琴练习《眉间雪》和《风动草》</strong></li>
</ul>
</li>
</ul>
<h2 id="Records："><a href="#Records：" class="headerlink" title="Records："></a>Records：</h2><ol start="5">
<li><p>记住下面的官方最全示例，不过现在应该大致会用了</p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span>
<span class="token font-matter yaml language-yaml">title: typora-vue-theme主题介绍
date: 2018-09-07 09:25:00
author: 赵奇
img: /source/images/xxx.jpg
top: true
cover: true
coverImg: /images/1.jpg
password: 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92
toc: false
mathjax: false
summary: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要
categories: Markdown
tags:
  - Typora
  - Markdown</span>
<span class="token punctuation">---</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>测试了博客的密码功能，bug有点多，并且密码逻辑需要自己写，于是一个锁全站并且密码错误才可以进的网站产生了QAQ（打算以后再实现出来，现在也没这个需求，慢慢迭代！）</p>
</li>
<li><p>cover的颜色滤镜好丑啊，不喜欢紫色，以后想办法改一下（不过它好像其实是彩色的？）</p>
</li>
<li><p>简单尝试了一下看板娘，暂时不打算用了，一个是有奇怪的声音，一个是会挡字，有点不方便，并且有个通病，页面放大的同时看板娘也会放大，就很不好</p>
</li>
<li><p>部署成功，开始密集测试！！！</p>
</li>
</ol>
<h2 id="Notes"><a href="#Notes" class="headerlink" title="Notes:"></a>Notes:</h2><p><strong><font color="blue">好看的A2大姐姐(^o^)/~</font></strong></p>
<p><img src="/images/A2.png"></p>
]]></content>
      <tags>
        <tag>plan</tag>
      </tags>
  </entry>
</search>
